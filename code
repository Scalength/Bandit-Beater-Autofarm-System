local lp = game.Players.LocalPlayer
local function getNPC() -- Get the NPC in front of the player
    local dist, thing = math.huge
    for i, v in pairs(game:GetService("Workspace").Mobs:GetChildren()) do 
        if v.Name == "Frenzy Boarr" then
            -- Resize NPC HumanoidRootPart
            v.HumanoidRootPart.Size = v.HumanoidRootPart.Size + Vector3.new(0, 30, 0)
            
            -- Calculate the direction vector from player to NPC
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then 
                dist = mag 
                thing = v 
            end
        end
    end
    return thing
end

local TweenService  = game:GetService("TweenService")
local noclipE       = false
local antifall      = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end

local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude) / speed, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})
    
    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0, 0, 0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
    
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end

getgenv().bandit = true  -- Toggle
while bandit do
    task.wait()
    pcall(function()
        local npc = getNPC()
        if npc then
            -- Get the player's position and direction
            local playerHRP = game.Players.LocalPlayer.Character.HumanoidRootPart
            local playerFacingDirection = playerHRP.CFrame.LookVector -- This is the direction the player is facing
            
            -- Position the NPC 10 studs in front of the player
            local npcTargetPosition = playerHRP.Position + playerFacingDirection * 10  -- You can change 10 to another value for a different distance
            
            -- Move the NPC to the new position
            moveto(CFrame.new(npcTargetPosition), 30)
        end
    end)
end
