local lp = game.Players.LocalPlayer
local mobs = {"Ice Walker", "Ice Elemental", "Snowhorse"}

local function getNPC() 
    local dist, closestMob = math.huge, nil
    -- Loop through all mobs in the Workspace
    for _, mob in pairs(game:GetService("Workspace").Mobs:GetChildren()) do
        -- Check if the mob's name is in the mobs table
        if table.find(mobs, mob.Name) then
            -- Correct the resizing of the NPC's HumanoidRootPart (optional)
            mob.HumanoidRootPart.Size = Vector3.new(2, 55, 5)
            mob.HumanoidRootPart.CanCollide = false
            -- Calculate the distance between the player and the mob
            local mag = (lp.Character.HumanoidRootPart.Position - mob.HumanoidRootPart.Position).magnitude
            -- Check if this mob is the closest so far
            if mag < dist then
                dist = mag
                closestMob = mob
            end
        end
    end
    return closestMob
end


 
local TweenService  = game:GetService("TweenService")
local noclipE       = false
local antifall      = false
 
local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end
 
local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude) / speed, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})
 
    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
 
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end
 
getgenv().bandit = true  -- Toggle
while getgenv().bandit do 
    task.wait()  -- This ensures the loop is regularly checking for changes
    pcall(function()
        local npc = getNPC()
        if npc then
            moveto(npc.HumanoidRootPart.CFrame + Vector3.new(0, 20, 0), 29)
        end
    end)
end
